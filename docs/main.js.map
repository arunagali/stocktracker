{"version":3,"sources":["./src/environments/environment.ts","./src/app/sentimentpage/sentimentpage.component.html","./src/app/sentimentpage/sentimentpage.component.ts","./src/app/quoteslist/quoteslist.component.ts","./src/app/quoteslist/quoteslist.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/shared/stockquote.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n    <div class=\"fluid-container\">\n        <div class=\"heading\">\n            <h2>Stock Details</h2>\n        </div>\n        <div class=\"card\">\n            <div class=\"row\">\n                <div class=\"loaders\" *ngIf=\"dataStatus\">Loading... Please wait</div>\n                <div class=\"col-md-12\">\n                <h4 *ngIf=\"symbolName\" class=\"mt-2 p-4\">{{symbolName | titlecase}} ({{symbolName}})</h4>\n                </div>\n                <div *ngIf = \"!sentimentData.length\">No data..</div>\n                <div class=\"col-md-4 col-sm-4 col-4\"\n                   *ngFor=\"let sentData of sentimentData; let i = index\">\n                   <div class=\"stock-sec d-flex\">\n                    <ul class=\"mr-5 stock-section\">\n                      <li>{{ getMonthName(sentData?.month) | uppercase }}</li>\n                      <li>Change: {{ sentData?.change }}</li>\n                      <li>MSPR: {{ sentData?.mspr }}</li>\n                    </ul>\n                    <div>\n                        <div\n                          *ngIf=\"sentData?.change < 0\"\n                          class=\"stock-sym\"\n                          style=\"color:red\"\n                        >\n                          🡻\n                        </div>\n                        <div\n                          *ngIf=\"sentData?.change > 0\"\n                          class=\"stock-sym\"\n                          style=\"color:green\"\n                        >\n                          🡹\n                        </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <a routerLink = '/' class=\"btn btn-link\" \n            routerLinkActive=\"active\">Back to list of stocks\n            <i class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i></a>\n          </div>\n    </div>\n </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Sentiment } from '../shared/sentiment';\nimport { StockquoteService } from '../shared/stockquote.service';\n\n@Component({\n  selector: 'app-sentimentpage',\n  templateUrl: './sentimentpage.component.html',\n  styleUrls: ['./sentimentpage.component.css']\n})\nexport class SentimentpageComponent implements OnInit {\n public sentimentData:Sentiment[] = [];\n public symbol: string;\n  public fromDate: string;\n  public toDate: string;\n  public symbolName: string;\n  public dataStatus: boolean = false;\n\n  constructor(private _quote: StockquoteService, private _activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this._activatedRoute.paramMap.subscribe((params =>{\n        this.symbol = params.get('symbol');\n    }))\n    this.getDates();\n    this.getSentimentData();\n  }\n\n  getDates(){\n    let todayDate = new Date().toISOString().slice(0, 10);\n    let date = new Date(todayDate);\n    date.setMonth(date.getMonth() - 3);\n    this.toDate = todayDate;\n    this.fromDate = date.toISOString().slice(0, 10);\n  }\n\n  getSentimentData(){\n    this.dataStatus = true;\n    this._quote.getSentiment(this.symbol, this.fromDate, this.toDate).subscribe((data: any) =>{\n    this.dataStatus = false;\n    this.sentimentData = data.data;\n    this.symbolName = data.symbol;\n  })\n\n  }\n\n  getMonthName(val: number){\n    let months = [];\n    let todayDate = new Date().toISOString().slice(0, 10);\n    let date = new Date(todayDate);\n    date.setMonth( val- 1);\n    return months[val] = date.toLocaleString('en-US', {\n      month: 'long',\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuoteData } from '../shared/quote-data';\nimport { StockquoteService } from '../shared/stockquote.service';\n\n@Component({\n  selector: 'app-quoteslist',\n  templateUrl: './quoteslist.component.html',\n  styleUrls: ['./quoteslist.component.css']\n})\nexport class QuoteslistComponent implements OnInit {\n  public formGroup: FormGroup;\n  public quotesList: QuoteData[] = [];\n  public quoteStatus: boolean = true;\n\n stockArray=[];\n  constructor(private _stockquote: StockquoteService) { }\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup({\n      symbol: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(5),\n      ]),\n    });\n    \n    this.quotesList = localStorage.getItem('quotesData')\n      ? JSON.parse(localStorage.getItem('quotesData'))\n      : [];\n  }\n  quotesDataDetails(){\n     this.companyName();\n  }\n\n   companyName(){\n    this.quoteStatus = false;\n    this._stockquote.getCompanyName(this.formGroup.value.symbol).subscribe((data:any) =>{\n      let list = {\n        description: data.result[0].description,\n        symbol: data.result[0].symbol\n      };\n      this.quotesData(list);\n    })\n  }\n\n  quotesData(list){\n     this._stockquote.getQuoteData(this.formGroup.value.symbol).subscribe((data) =>{\n      this.quoteStatus = true;\n      this.quotesList.push({...list, ...data});\n     localStorage.setItem('quotesData',JSON.stringify(this.quotesList));\n   })\n   this.formGroup.reset();\n}\n\ndeleteStock(index,str){\n  this.quotesList.splice(index, 1);\n  localStorage.setItem('quotesData',JSON.stringify(this.quotesList));\n}\n}\n","<div class=\"container\">\n  <div class=\"fluid-container\">\n    <div class=\"heading\">\n      <h2>Stock Tracker</h2>\n    </div>\n\n    <div class=\"form-group track-sec\">\n      <form class=\"form-inline\" [formGroup] = 'formGroup' (ngSubmit)=\"quotesDataDetails()\" novalidate>\n        <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"quote-label mb-4\">\n            <label for=\"stock\">Enter the symbol of a stock to track (i.e. AAPL, TSLA)</label>\n          </div>\n        </div>\n      </div>\n        <div class=\"row\">\n        <div class=\"form-group col-sm-3 mb-2\">\n          <input [class.is-invalid]=\"formGroup.get('symbol').invalid && formGroup.get('symbol').touched\" type=\"text\" class=\"form-control\" id=\"stockInput\" autocomplete=\"off\"\n            formControlName=\"symbol\" placeholder=\"Enter stock symbol\" required/>\n        </div>\n            <button type=\"submit\"\n          class=\"btn btn-primary col-sm-3 mb-2 quote-btn\">Track Stock\n        </button>\n        <div *ngIf=\"formGroup.get('symbol').invalid && formGroup.get('symbol').touched\">\n          <small class=\"text-danger\" *ngIf=\"formGroup.get('symbol').errors?.required\">\n            Stock symbol is required</small>\n          <small class=\"text-danger\" *ngIf=\"formGroup.get('symbol').errors?.minlength\">\n            Stock symbol must be atleast 1 character</small>\n            <small class=\"text-danger\" *ngIf=\"formGroup.get('symbol').errors?.maxlength\">\n              Stock symbol must be 5 characters only</small>\n        </div>\n      </div>\n      </form>\n  </div>\n\n    <div class=\"row\">\n      <div class=\"loaders\" *ngIf=\"!quoteStatus\">\n        Loading data, Please wait...\n      </div>\n    </div>\n\n    <div class=\"row mt-2\">\n      <div class=\"col-sm-6\" *ngFor=\"let quote of quotesList; let i = index\">\n        <div class=\"card mb-2\">\n        <span class=\"delete-quote\">\n          <i (click)=\"deleteStock(i, stock)\" class=\"fa fa-times-circle-o\" aria-hidden=\"true\"></i>\n        </span>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n              {{quote.description | uppercase}} {{quote.symbol}}\n          </h5>\n          <div class=\"quote-block\">\n            <ul class=\"quote-section\">\n              <li class=\"card-text\">Change today: {{quote?.d | percent}}</li>\n              <li class=\"card-text\">Current price: {{quote?.c | currency}}</li>\n            </ul>\n            <ul class=\"quote-section\">\n              <li class=\"card-text\">Opening price: {{quote?.o | currency}}</li>\n              <li class=\"card-text\">High price: {{quote?.h | currency}}</li>\n            </ul>\n            <div>\n              <div *ngIf=\"quote?.d < -0\"\n                          class=\"stock-sym\"\n                          style=\"color:red\"\n                        >\n                          🡻\n                        </div>\n                        <div\n                          *ngIf=\"quote?.d > +0\"\n                          class=\"stock-sym\"\n                          style=\"color:green\"\n                        >\n                          🡹\n                        </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <a routerLink = '/sentimentpage/{{quote?.symbol}}' class=\"btn btn-link\" \n              routerLinkActive=\"active\">See sentiment details \n              <i class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'stockTracker';\n}\n","<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteslistComponent } from './quoteslist/quoteslist.component';\nimport { SentimentpageComponent } from './sentimentpage/sentimentpage.component';\nimport { StockquoteService } from './shared/stockquote.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteslistComponent,\n    SentimentpageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [StockquoteService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuoteslistComponent } from './quoteslist/quoteslist.component';\nimport { SentimentpageComponent } from './sentimentpage/sentimentpage.component';\n\nconst routes: Routes = [\n  {path:'', redirectTo:'/quotesList', pathMatch:'full'},\n  {path:'quotesList', component:QuoteslistComponent},\n  {path:'sentimentpage/:symbol', component:SentimentpageComponent},\n  {path:'**', redirectTo:'/quotesList', pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockquoteService {\n  \n  constructor(private _http: HttpClient) { }\n \n  configUrl = \"https://finnhub.io/api/v1/\";\n  token = \"&token=bu4f8kn48v6uehqi3cqg\";\n\n  \n  getQuoteData(symbol: string){\n    return this._http.get(this.configUrl + \"quote?symbol=\" + symbol + this.token);\n  }\n\ngetCompanyName(search: string){\n  return this._http.get(this.configUrl + \"search?q=\" + search + this.token);\n\n}\ngetSentiment(symbol: string, from: string, to: string){\n  return this._http.get(this.configUrl + \"stock/insider-sentiment?symbol=\" + symbol + \"&from=\" + from + \"&to=\" + to + this.token )\n}\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}